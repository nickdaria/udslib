#pragma once

/**
 * @brief Indexes of UDS bytes in a message
 * 
 */
#define UDS_PROTOCOL_SERVICE_IDX 0
#define UDS_PROTOCOL_NACK_IDX 1

/**
 * @brief Default session as defined by UDS protocol
 * 
 */
#define UDS_PROTOCOL_DEFAULT_SESSION 0x01

/**
 * @brief All standard UDS services (stored as request values)
 * 
 */
typedef enum {
    //  Diagnostic and Communications Management
    UDS_SERVICE_DIAGNOSTIC_SESSION_CONTROL = 0x10,
    UDS_SERVICE_ECU_RESET = 0x11,
    UDS_SERVICE_SECURITY_ACCESS = 0x27,
    UDS_SERVICE_COMMUNICATION_CONTROL = 0x28,
    UDS_SERVICE_AUTHENTICATION = 0x29,
    UDS_SERVICE_TESTER_PRESENT = 0x3E,
    UDS_SERVICE_ACCESS_TIMING_PARAMETERS = 0x83,
    UDS_SERVICE_SECURED_DATA_TRANSMISSION = 0x84,
    UDS_SERVICE_CONTROL_DTC_SETTINGS = 0x85,
    UDS_SERVICE_RESPONSE_ON_EVENT = 0x86,
    UDS_SERVICE_LINK_CONTROL = 0x87,

    // Data Transmission
    UDS_SERVICE_READ_DATA_BY_IDENTIFIER = 0x22,
    UDS_SERVICE_READ_MEMORY_BY_ADDRESS = 0x23,
    UDS_SERVICE_READ_SCALING_DATA_BY_IDENTIFIER = 0x24,
    UDS_SERVICE_READ_DATA_BY_IDENTIFIER_PERIODIC = 0x2A,
    UDS_SERVICE_DYNAMICALLY_DEFINE_DATA_IDENTIFIER = 0x2C,
    UDS_SERVICE_WRITE_DATA_BY_IDENTIFIER = 0x2E,
    UDS_SERVICE_WRITE_MEMORY_BY_ADDRESS = 0x3D,

    // Stored Data Transmission
    UDS_SERVICE_CLEAR_DIAGNOSTIC_INFORMATION = 0x14,
    UDS_SERVICE_READ_DTC_INFORMATION = 0x19,

    //  Input/Output Control
    UDS_SERVICE_INPUT_OUTPUT_CONTROL_BY_IDENTIFIER = 0x2F,

    //  Remote Activation of Routine
    UDS_SERVICE_REQUEST_DOWNLOAD = 0x34,
    UDS_SERVICE_REQUEST_UPLOAD = 0x35,
    UDS_SERVICE_TRANSFER_DATA = 0x36,
    UDS_SERVICE_REQUEST_TRANSFER_EXIT = 0x37,
    UDS_SERVICE_REQUEST_FILE_TRANSFER = 0x38,

    //  Negative Response
    UDS_SERVICE_NEGATIVE_RESPONSE = 0x7F
} uds_protocol_services_t;

/**
 * @brief Negative response (NACK) codes
 * 
 */
typedef enum {
    UDS_NACK_GENERAL_REJECT = 0x10,
    UDS_NACK_SERVICE_NOT_SUPPORTED = 0x11,
    UDS_NACK_SUBFUNCTION_NOT_SUPPORTED = 0x12,
    UDS_NACK_INVALID_FORMAT = 0x13,
    UDS_NACK_RESPONSE_TOO_LONG = 0x14,
    UDS_NACK_BUSY_REPEAT_REQUEST = 0x21,
    UDS_NACK_CONDITIONS_NOT_CORRECT = 0x22,
    UDS_NACK_REQUEST_SEQUENCE_ERROR = 0x24,
    UDS_NACK_NO_RESPONSE_FROM_SUBNET_COMPONENT = 0x25,
    UDS_NACK_FAILURE_PREVENTS_EXECUTION = 0x31,
    UDS_NACK_REQUEST_OUT_OF_RANGE = 0x33,
    UDS_NACK_SECURITY_ACCESS_DENIED = 0x35,
    UDS_NACK_AUTHENTICATION_FAILED = 0x36,
    UDS_NACK_INVALID_KEY = 0x37,
    UDS_NACK_EXCEED_NUMBER_OF_ATTEMPTS = 0x38,
    UDS_NACK_REQUIRED_TIME_DELAY_NOT_EXPIRED = 0x39,
    UDS_NACK_SECURE_DATA_TRANSMISSION_REQUIRED = 0x38,
    UDS_NACK_SECURE_DATA_TRANSMISSION_NOT_ALLOWED = 0x39,
    UDS_NACK_SECURE_DATA_TRANSMISSION_FAILED = 0x3A,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_TIME_PERIOD = 0x50,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_SIGNATURE = 0x51,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_CHAIN_OF_TRUST = 0x52,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_TYPE = 0x53,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_FORMAT = 0x54,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_CONTENT = 0x55,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_SCOPE = 0x56,
    UDS_NACK_CERT_VALIDATION_FAILED_INVALID_CERTIFICATE = 0x57,
    UDS_NACK_OWNERSHIP_VERIFICATION_FAILED = 0x58,
    UDS_NACK_CHALLENGE_CALCULATION_FAILED = 0x59,
    UDS_NACK_SETTING_ACCESS_RIGHT_FAILED = 0x5A,
    UDS_NACK_SESSION_KEY_CREATION_FAILED = 0x5B,
    UDS_NACK_CONFIGURATION_DATA_USAGE_FAILED = 0x5C,
    UDS_NACK_DEAUTHENTICATION_FAILED = 0x5D,
    UDS_NACK_UPLOAD_DOWNLOAD_NOT_ACCEPTED = 0x70,
    UDS_NACK_TRANSFER_DATA_SUSPENDED = 0x71,
    UDS_NACK_GENERAL_PROGRAMMING_FAILURE = 0x72,
    UDS_NACK_WRONG_BLOCK_SEQUENCE_NUMBER = 0x73,
    UDS_NACK_RESPONSE_PENDING = 0x78,
    UDS_NACK_SUBFUNCTION_NOT_SUPPORTED_IN_ACTIVE_SESSION = 0x7E,
    UDS_NACK_SERVICE_NOT_SUPPORTED_IN_ACTIVE_SESSION = 0x7F,
    UDS_NACK_RPM_TOO_HIGH = 0x81,
    UDS_NACK_RPM_TOO_LOW = 0x82,
    UDS_NACK_ENGINE_IS_RUNNING = 0x83,
    UDS_NACK_ENGINE_IS_NOT_RUNNING = 0x84,
    UDS_NACK_ENGINE_RUN_TIME_TOO_LOW = 0x85,
    UDS_NACK_TEMPERATURE_TOO_HIGH = 0x86,
    UDS_NACK_TEMPERATURE_TOO_LOW = 0x87,
    UDS_NACK_VEHICLE_SPEED_TOO_HIGH = 0x88,
    UDS_NACK_VEHICLE_SPEED_TOO_LOW = 0x89,
    UDS_NACK_THROTTLE_PEDAL_TOO_HIGH = 0x8A,
    UDS_NACK_THROTTLE_PEDAL_TOO_LOW = 0x8B,
    UDS_NACK_TRANSMISSION_RANGE_NOT_IN_NEUTRAL = 0x8C,
    UDS_NACK_TRANSMISSION_RANGE_NOT_IN_GEAR = 0x8D,
    UDS_NACK_BRAKE_SWITCH_NOT_CLOSED = 0x8F,
    UDS_NACK_SHIFTER_LEVER_NOT_IN_PARK = 0x90,
    UDS_NACK_TORQUE_CONVERTER_CLUTCH_LOCKED = 0x91,
    UDS_NACK_VOLTAGE_TOO_HIGH = 0x92,
    UDS_NACK_VOLTAGE_TOO_LOW = 0x93,
    UDS_NACK_RESOURCE_TEMPORARILY_UNAVAILABLE = 0x94
} uds_protocol_negative_response_codes;

/**
 * @brief Types of ECU reset requests
 * 
 */
typedef enum {
    UDS_ECU_RESET_HARD = 0x01,
    UDS_ECU_RESET_KEY_OFF_ON = 0x02,
    UDS_ECU_RESET_SOFT = 0x03,
} uds_protocol_ecu_reset_type_t;